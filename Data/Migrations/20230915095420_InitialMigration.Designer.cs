// <auto-generated />
using System;
using EventRegistrationApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventRegistrationApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230915095420_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("EventRegistrationApp.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 9, 22, 11, 54, 20, 295, DateTimeKind.Local).AddTicks(970),
                            Name = "Event 1",
                            TotalSeats = 60
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 9, 29, 11, 54, 20, 295, DateTimeKind.Local).AddTicks(995),
                            Name = "Event 2",
                            TotalSeats = 70
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 10, 6, 11, 54, 20, 295, DateTimeKind.Local).AddTicks(997),
                            Name = "Event 3",
                            TotalSeats = 80
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 10, 13, 11, 54, 20, 295, DateTimeKind.Local).AddTicks(998),
                            Name = "Event 4",
                            TotalSeats = 90
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2023, 10, 20, 11, 54, 20, 295, DateTimeKind.Local).AddTicks(1000),
                            Name = "Event 5",
                            TotalSeats = 100
                        });
                });

            modelBuilder.Entity("EventRegistrationApp.Models.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 2,
                            ReferenceNumber = "Ref1",
                            UserId = "User1"
                        },
                        new
                        {
                            Id = 2,
                            EventId = 3,
                            ReferenceNumber = "Ref2",
                            UserId = "User2"
                        },
                        new
                        {
                            Id = 3,
                            EventId = 4,
                            ReferenceNumber = "Ref3",
                            UserId = "User3"
                        },
                        new
                        {
                            Id = 4,
                            EventId = 5,
                            ReferenceNumber = "Ref4",
                            UserId = "User4"
                        },
                        new
                        {
                            Id = 5,
                            EventId = 1,
                            ReferenceNumber = "Ref5",
                            UserId = "User5"
                        },
                        new
                        {
                            Id = 6,
                            EventId = 2,
                            ReferenceNumber = "Ref6",
                            UserId = "User6"
                        },
                        new
                        {
                            Id = 7,
                            EventId = 3,
                            ReferenceNumber = "Ref7",
                            UserId = "User7"
                        },
                        new
                        {
                            Id = 8,
                            EventId = 4,
                            ReferenceNumber = "Ref8",
                            UserId = "User8"
                        },
                        new
                        {
                            Id = 9,
                            EventId = 5,
                            ReferenceNumber = "Ref9",
                            UserId = "User9"
                        },
                        new
                        {
                            Id = 10,
                            EventId = 1,
                            ReferenceNumber = "Ref10",
                            UserId = "User10"
                        });
                });

            modelBuilder.Entity("EventRegistrationApp.Models.Registration", b =>
                {
                    b.HasOne("EventRegistrationApp.Models.Event", "Event")
                        .WithMany("Registrations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("EventRegistrationApp.Models.Event", b =>
                {
                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
